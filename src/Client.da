common = import_da('common')
import time

class Client(process):
    def setup(configHashMap:dict,subCoIdMap:dict,resCoIdMap:dict,clientId:dict): 
        self.resumeFlag = False 
        self.appReq = None
        pass #print("poda:",subCoId)

    def run():
        #output("hello Client!")
        #readConfigFile(sys.argv[1])
        #print ("myid: ",self.id)
        subIdList = configHashMap['subjectId']
        resIdList = configHashMap['resourceId']
        uniqueIdList = configHashMap['uniqueId']
        waitTimeList = configHashMap['waitTime']
        actionList = configHashMap['action']
        numClients = int(configHashMap['numClients'])
        numCoordinators = int(configHashMap['numCoordinators'])
        i=clientId[self.id]%numClients

        #print("Length of subidlist",len(subIdList))
        
        while(i<len(subIdList)):
            #output("Send another request")
            #print("Waititme:",waitTimeList[i])
            appReq = common.AppRequest(subIdList[i],resIdList[i],waitTimeList[i],actionList[i],self.id)
            appReq.subCoId = subCoIdMap[int(subIdList[i]) % (numCoordinators/2)]
            appReq.resCoId = resCoIdMap[int(resIdList[i]) % (numCoordinators - numCoordinators/2)]
            #self.subCoId=appReq.subCoId
            appReq.testConflict = configHashMap['conflict']
            if uniqueIdList[i] != '0':
                appReq.uniqueId = uniqueIdList[i]
            if appReq.uniqueId == '1':
                appReq.testFail = False
            if appReq.uniqueId == '2':
                time.sleep(2)
            send(('POLICY_EVAL_REQUEST',appReq,),to=appReq.subCoId)
            await(self.resumeFlag)
            self.resumeFlag=False
            i+=numClients
        
    def receive(msg = (reqObject,), from_ = subCoId):
        output(reqObject.subId,reqObject.action,reqObject.resId,':', reqObject.result['value'])
        self.resumeFlag = True
