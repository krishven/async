SubjectCoordinator = import_da('SubjectCoordinator')
Worker = import_da('Worker')
common = import_da('common')

import time
import pprint
import logging

updates = {}

class ResourceCoordinator(process):
	def setup(configFile:str,workerIdList:Worker,workerResCoMap:dict):
		self.configHashMap={}
		self.count=0
		self.numWorkers=0

	def run():
		#output("hello Resco!")
		self.configHashMap = common.readConfigFile(configFile)
		self.numWorkers = int(configHashMap['numWorkers'])
		await(False)

	def receive(msg=('POLICY_EVAL_REQUEST',reqObject,), from_=subCoId):
		output("Received content in RC (REQUEST) from SC {0}:".format(subCoId),reqObject,level=logging.DEBUG)
		#print("Received from SubCo:",reqObject.subCoId)
		workerList = workerResCoMap[self.id]
		workerId = workerList[self.count%self.numWorkers]
		#print("W:",workerId)	
		send(('POLICY_EVAL_REQUEST',reqObject,),to=workerId)
		output("Sent content from RC (REQUEST) to Worker {0}:".format(workerId),reqObject,level=logging.DEBUG)
		self.count+=1

	def receive(msg=('POLICY_CONFLICT_CHECK',reqObject,), from_=subCoId):
		output("Received content in RC(CONFLICT CHECK) from SC {0}:".format(subCoId),reqObject,level=logging.DEBUG)
		checkResourceConflict(reqObject)
		send(('POLICY_CONFLICT_CHECK',reqObject,),to=reqObject.subCoId)
		output("Sent content from RC (CONFLICT RESULT) to SC {0}:".format(reqObject.subCoId),reqObject,level=logging.DEBUG)

	def checkResourceConflict(reqObject):
		result = reqObject.result
		reqObject.conflict = False
		for attr in reqObject.resRules:
			if (reqObject.resId, attr) in updates:
				updateTime = updates[(reqObject.resId, attr)]
				if updateTime >= reqObject.timestamp:
					reqObject.conflict = True
					output('Conflict in ResourceCoordinator')
					return

		time.sleep(int(reqObject.waitTime))
		if reqObject.uniqueId == '1' and reqObject.testFail == False:
			time.sleep(5)
			reqObject.testFail = True
			reqObject.conflict = reqObject.testConflict
			#output('Conflict in ResourceCoordinator')
			return
		if result['update'] == True and result['type'] == 'resource':
			updates[(reqObject.resId, result['attrName'])] = time.time()
		output('No conflict in RC')
		output('Resource Updates')
		pp = pprint.PrettyPrinter(indent=4)
		pp.pprint(updates)
