SubjectCoordinator = import_da('SubjectCoordinator')
Worker = import_da('Worker')
common = import_da('common')

updates = {}

class ResourceCoordinator(process):
	def setup(workerId:Worker,configHasHMap:dict): 
		self.clearFlag=False

	def run():
		output("hello Resco!")
		await(self.clearFlag)

	def receive(msg=('POLICY_EVAL_REQUEST',reqObject,), from_=subCoId):
		print("Received from SubCo:",reqObject.subCoId)
		send(('POLICY_EVAL_REQUEST',reqObject,),to=workerId)

	def receive(msg=('POLICY_CONFLICT_CHECK',reqObject,), from_=subCoId):
		checkResourceConflict(reqObject)
		send(('POLICY_CONFLICT_CHECK',reqObject,),to=reqObject.subCoId)

	def checkResourceConflict(reqObject):
		reqObject.result['value'] = True
		for attr in reqObject.resRules:
			if (reqObject.resId, attr) in updates:
				updateTime = updates[(reqObject.resId, attr)]
				if updateTime >= reqObject.timestamp:
					reqObject.result['value'] = False
				else:
					updates[(reqObject.resId, attr)] = reqObject.timestamp
			else:
				updates[(reqObject.resId, attr)] = reqObject.timestamp

		print('Updates',updates)